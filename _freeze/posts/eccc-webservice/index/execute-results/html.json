{
  "hash": "40d29eb537b933f09ea2ed78c1692c14",
  "result": {
    "markdown": "---\ntitle: The return of the web service\nauthor: Sam Albers\ndate: '2023-05-04'\nslug: eccc-web-service\ncategories:\n  - R\n  - hydrology\n  - tidyhydat\ntags: []\ndescription: ''\nfeatured: ''\nfeaturedalt: ''\nfeaturedpath: ''\nlinktitle: ''\ntype: post\n---\n\n\n\n\n\n\nThe most common question I get about the tidyhydat package goes something like this: \n\n> How do I get realtime data longer than the 30 days available in the datamart via [`realtime_dd`](https://docs.ropensci.org/tidyhydat/reference/realtime_dd.html)?\n\nPreviously the answer was... you can't. The HYDAT database is a historical database of hydrometric data. Data are validated and entered into HYDAT periodically. It is not updated in realtime. At the same time realtime data is only available for 30 days from the datamart. \n\nNow, however, Environment and Climate Change Canada (ECCC) provided a [web service](https://wateroffice.ec.gc.ca/services/links_e.html) that provides realtime data for stations which extends back to about 18 months. This usually spans the gap for current data to when it gets into HYDAT. And since tidyhydat version 0.6.0 you can now access this data in R via the `realtime_ws` function. This post is a quick introduction to some of the usage of the web service from tidyhydat. \n\nLet's load a few packages to help illustrate this.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyhydat)\nlibrary(dplyr)\nlibrary(lubridate)\n```\n:::\n\n\n## Using the web service for realtime hydrometric data\n\nThe `realtime_ws` function operates in a similar way to most of the other functions in tidyhydat particularly the `realtime_dd` function. You can pass a single station or a vector of stations and the function returns a tibble of data relating to that station. I am assuming that you know which station you want and know its number. For an introduction to tidyhydat see [this vignette](https://docs.ropensci.org/tidyhydat/articles/tidyhydat_an_introduction.html). You can also search for stations using the [`tidyhydat::search_stn_name`](https://docs.ropensci.org/tidyhydat/reference/search_stn_name.html) function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nws <- realtime_ws(\n  station_number = \"08MF005\"\n)\nglimpse(ws)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 18,600\nColumns: 10\n$ STATION_NUMBER <chr> \"08MF005\", \"08MF005\", \"08MF005\", \"08MF005\", \"08MF005\", …\n$ Date           <dttm> 2023-04-04 00:00:00, 2023-04-04 01:00:00, 2023-04-04 0…\n$ Name_En        <chr> \"Water temperature\", \"Water temperature\", \"Water temper…\n$ Value          <dbl> 5.82, 4.87, 4.94, 4.70, 4.21, 3.97, 3.86, 3.81, 3.66, 3…\n$ Unit           <chr> \"°C\", \"°C\", \"°C\", \"°C\", \"°C\", \"°C\", \"°C\", \"°C\", \"°C\", \"…\n$ Grade          <chr> \"-1\", \"-1\", \"-1\", \"-1\", \"-1\", \"-1\", \"-1\", \"-1\", \"-1\", \"…\n$ Symbol         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Approval       <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Parameter      <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ Code           <chr> \"TW\", \"TW\", \"TW\", \"TW\", \"TW\", \"TW\", \"TW\", \"TW\", \"TW\", \"…\n```\n:::\n:::\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n```{=html}\n<div id=\"cxgtmtdmiv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#cxgtmtdmiv table {\n  font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#cxgtmtdmiv thead, #cxgtmtdmiv tbody, #cxgtmtdmiv tfoot, #cxgtmtdmiv tr, #cxgtmtdmiv td, #cxgtmtdmiv th {\n  border-style: none;\n}\n\n#cxgtmtdmiv p {\n  margin: 0;\n  padding: 0;\n}\n\n#cxgtmtdmiv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #FFFFFF;\n  font-size: 12px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #231409;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#cxgtmtdmiv .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #231409;\n  border-bottom-width: 0;\n}\n\n#cxgtmtdmiv .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #231409;\n  border-top-width: 0;\n}\n\n#cxgtmtdmiv .gt_heading {\n  background-color: #231409;\n  text-align: center;\n  border-bottom-color: #231409;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#cxgtmtdmiv .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#cxgtmtdmiv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#cxgtmtdmiv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#cxgtmtdmiv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#cxgtmtdmiv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#cxgtmtdmiv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#cxgtmtdmiv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cxgtmtdmiv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#cxgtmtdmiv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#cxgtmtdmiv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#cxgtmtdmiv .gt_stub {\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cxgtmtdmiv .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #231409;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#cxgtmtdmiv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#cxgtmtdmiv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#cxgtmtdmiv .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #231409;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cxgtmtdmiv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#cxgtmtdmiv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #231409;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cxgtmtdmiv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#cxgtmtdmiv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #231409;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cxgtmtdmiv .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #231409;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cxgtmtdmiv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cxgtmtdmiv .gt_left {\n  text-align: left;\n}\n\n#cxgtmtdmiv .gt_center {\n  text-align: center;\n}\n\n#cxgtmtdmiv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#cxgtmtdmiv .gt_font_normal {\n  font-weight: normal;\n}\n\n#cxgtmtdmiv .gt_font_bold {\n  font-weight: bold;\n}\n\n#cxgtmtdmiv .gt_font_italic {\n  font-style: italic;\n}\n\n#cxgtmtdmiv .gt_super {\n  font-size: 65%;\n}\n\n#cxgtmtdmiv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#cxgtmtdmiv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#cxgtmtdmiv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#cxgtmtdmiv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#cxgtmtdmiv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#cxgtmtdmiv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#cxgtmtdmiv .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Parameter\">Parameter</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Name_En\">Name_En</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">46</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (primary sensor)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">16</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (secondary sensor, telemetry)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">11</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (secondary sensor)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">52</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (tertiary sensor, telemetry)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">13</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (tertiary sensor)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">3</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (daily mean)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">39</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water level (hourly mean)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">14</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Elevation, natural lake</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">42</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Elevation, lake or reservoir rule curve</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">17</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Atmospheric pressure</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">18</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Accumulated precipitation</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">19</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Incremental precipitation</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">47</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (primary sensor derived)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">7</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (secondary sensor derived)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">10</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (tertiary sensor derived)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">6</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (daily mean)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">40</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (hourly mean)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">8</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Discharge (sensor)</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">50</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Snow depth</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">51</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Snow depth, new snowfall</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Air temperature</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">5</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water temperature</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">41</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Secondary water temperature</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">34</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Wind direction</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">35</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Wind speed</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">2</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Battery voltage</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">20</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Blue-green algae</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">21</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Conductance</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">26</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Total dissolved solids</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">43</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Dissolved nitrate</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">22</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Dissolved oxygen</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">24</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">pH</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">25</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Turbidity</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">9</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water velocity</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">37</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water velocity, x</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">38</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Water velocity, y</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">23</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Oxygen saturation</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">49</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Chlorophyll</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">28</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Relative humidity</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">36</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Cell end</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">4</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Internal equipment temperature</td></tr>\n    <tr><td headers=\"Parameter\" class=\"gt_row gt_right\">12</td>\n<td headers=\"Name_En\" class=\"gt_row gt_left\">Tank pressure</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nImmediately you can see that the data returned is different than the data returned by `realtime_dd`. In particular notice the `Name_En`, `Parameter` and `Code` columns. These columns are used to identify the parameters we are interested in. Turns out that you can access more than just hydrometric data via the web service (more on that later!). But for now let's just focus on hydrometric data by supplying 47 to the parameter argument to get discharge. Why did I choose 47? I consulted the `param_id` internal table which tells me that 47 is the parameter code for discharge. In the margin you can see all the other parameters available.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nws_discharge <- realtime_ws(\n  station_number = \"08MF005\",\n  parameter = 47\n)\n```\n:::\n\n\nSo how many months back does this data go?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(ws_discharge$Date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2023-04-04 00:00:00 UTC\" \"2023-05-04 23:55:00 UTC\"\n```\n:::\n:::\n\n\nWait - I told you that this would extend back 18 months. What gives? Well the default data range for `realtime_ws` is 30 days back from today. You can change this by supplying a `start_date` and `end_date` argument. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nws_discharge <- realtime_ws(\n  station_number = \"08MF005\",\n  parameter = 47,\n  start_date = Sys.Date() - months(18),\n  end_date = Sys.Date()\n)\n\nrange(ws_discharge$Date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2021-11-04 00:00:00 UTC\" \"2023-05-04 23:55:00 UTC\"\n```\n:::\n:::\n\n\nNow that's much better. From here you can make beautiful plots, tables and summaries of that glorious 18 months of data. \n\n## Other Parameters\n\nI did however promise that I would mention something about the other parameters available. The long table to the right lists all the possible parameters. In the [water office](https://wateroffice.ec.gc.ca/), you can see (sort of) which parameters are available for a given station. However it is lots of clicking. I currently don't know of an _easy_ way to determine which parameters are available for a given station other than just by checking. So for that I'd recommend querying a station for a short duration.\n\n::: {.cell}\n\n```{.r .cell-code}\nother_params <- realtime_ws(\n  station_number = \"08MF005\",\n  start_date = Sys.Date() - days(1),\n)\n\nparam_id[param_id$Parameter %in% unique(other_params$Parameter),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 7\n  Parameter Code  Unit  Name_En            Name_Fr Description_En Description_Fr\n      <dbl> <chr> <chr> <chr>              <chr>   <chr>          <chr>         \n1        46 HG    m     Water level (prim… Niveau… Height, stage… Hauteur, nive…\n2        47 QR    m3/s  Discharge (primar… Debit … Discharge - f… Débit - écoul…\n3         5 TW    °C    Water temperature  Tempér… Temperature, … Température, …\n```\n:::\n:::\n\n\nHere we can see that `08MF005`, which is the Fraser River at Hope station, also monitors water temperature which has a parameter code of 5. If we re-query the web service, we see that we can fine tune our call to the web service to only return water temperature.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfraser_temp <- realtime_ws(\n  station_number = \"08MF005\",\n  start_date = Sys.Date() - months(18),\n  parameter = 5\n)\n```\n:::\n\n\n## Why else might I want to use the web service?\n\nOne other reason you might consider using the web service is because it can be _much_ faster and more efficient that the datamart. We can construct one call to request all the data rather than iterate through multiple station csvs to get what we want. To illustrate this we can construct a simple function that benchmarks the two approaches. (Yes I know that these aren't returning _exactly_ the same thing but for these purposes it is good enough.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_realtime <- function(station_number) {\n  bench::mark(\n    realtime_ws = realtime_ws(\n      station_number = station_number,\n      parameter = c(46, 47)\n    ),\n    realtime_dd = realtime_dd(\n      station_number = station_number,\n    ),\n    max_iterations = 5,\n    check = FALSE\n  )\n}\n```\n:::\n\n\nLet's compare the two functions for a single station:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_realtime(\"08MF005\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  expression       min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr>  <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 realtime_ws    1.78s    1.78s     0.560    7.83MB     0   \n2 realtime_dd     1.7s     1.7s     0.589  593.99MB     8.84\n```\n:::\n:::\n\n\nOk so on a single station, the two approaches are similar in speed though you can see that lots more memory is being allocated using `realtime_dd`. By the time you add more stations to the mix, it becomes clear that the web service is a better faster and more efficient approach.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_realtime(c(\"08MF005\", \"08JC002\", \"02LA004\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  expression       min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr>  <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 realtime_ws     2.7s     2.7s     0.370   22.38MB     0   \n2 realtime_dd    4.66s    4.66s     0.215    1.73GB     6.44\n```\n:::\n:::\n\n\n## Conclusions\n\nThe web service functionality in tidyhydat is still new so if you notice any funky behaviour please let me know. You can do that by [opening an issue](https://github.com/ropensci/tidyhydat/issues) in the tidyhydat github repo. This functionality is a nice new way to access Canadian hydrometric data and I am excited to see how people may use it. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}